-- Creating table
CREATE TABLE IF NOT EXISTS sales(
	invoice_id VARCHAR(30) NOT NULL PRIMARY KEY,
    branch VARCHAR(5) NOT NULL,
    city VARCHAR(30) NOT NULL,
    customer_type VARCHAR(30) NOT NULL,
    gender VARCHAR(30) NOT NULL,
    product_line VARCHAR(100) NOT NULL,
    unit_price DECIMAL(10,2) NOT NULL,
    quantity INT NOT NULL,
    tax_pct DECIMAL(6,4) NOT NULL,
    total DECIMAL(12, 4) NOT NULL,
    date DATE NOT NULL,
    time TIME NOT NULL,
    payment VARCHAR(15) NOT NULL,
    cogs DECIMAL(10,2) NOT NULL,
    gross_margin_pct DECIMAL(11,9),
    gross_income DECIMAL(12, 4),
    rating DECIMAL(3, 1)
);

SELECT * FROM sales
-- Creating Time-based columns (time of day, day of week, and month)
ALTER TABLE sales
ADD COLUMN time_of_day VARCHAR(10)

UPDATE sales
SET time_of_day = 
CASE
	WHEN EXTRACT(HOUR FROM time) >= 0 AND EXTRACT(HOUR FROM time) < 12 THEN 'Morning'
	WHEN EXTRACT(HOUR FROM time) >= 12 AND EXTRACT(HOUR FROM time) < 17 THEN 'Afternoon'
	ELSE 'Evening'
END;

-- Day of Week
ALTER TABLE sales 
ADD COLUMN day_of_week VARCHAR(15)

UPDATE sales
SET day_of_week = TO_char(date,'Day')

--Month Name
ALTER TABLE sales
ADD COLUMN month_name VARCHAR(30)

UPDATE sales
SET month_name = TO_char(date,'Month')

-- EDA Product Analysis
--Both lines of code find the unique cities and the number of transactions within them
SELECT COUNT(city), city
FROM sales
GROUP BY DISTINCT(city)

SELECT COUNT(DISTINCT(city)) as unique_cities, city, COUNT(*) AS number_of_transactions
FROM sales
GROUP BY city
-- Branch by City
SELECT DISTINCT(city) AS unique_cities, branch
FROM sales

-- What are the different product lines?
SELECT DISTINCT(product_line)
FROM sales
-- Most Common Payment methods
SELECT COUNT(invoice_id), payment
FROM sales
GROUP BY payment
ORDER BY COUNT(invoice_id) DESC
-- Most Selling Product Line 
SELECT SUM(quantity) AS qty, product_line
FROM sales
GROUP BY product_line
ORDER BY qty DESC
-- Total Revenue by Month
SELECT SUM(total) AS total_revenue, month_name AS month
FROM sales
GROUP BY month_name
ORDER BY total_revenue DESC
-- Largest COGS by Month
SELECT SUM(COGS) AS COGS, month_name AS month
FROM sales
GROUP BY month_name
ORDER BY COGS DESC
LIMIT 1
-- Largest Revenue by Product Line
SELECT SUM(total) AS total_revenue, product_line
FROM sales
GROUP BY product_line
ORDER BY total_revenue DESC
-- Largest Revenue by City
SELECT SUM(total) AS total_revenue, city
FROM sales
GROUP BY city
ORDER BY total_revenue DESC
-- Largest VAT by Product Line
SELECT AVG(tax_pct) AS avg_tax, product_line
FROM sales
GROUP BY product_line
ORDER BY avg_tax DESC

-- Which Branch sold more products than Average sold
SELECT SUM(quantity) AS total_quantity, branch
FROM sales
GROUP BY branch
HAVING SUM(quantity) > (SELECT AVG(quantity) FROM sales)

-- Common product line by gender
SELECT COUNT(product_line), gender, product_line
FROM sales
GROUP BY gender, product_line
ORDER BY COUNT(product_line) DESC
--Average Rating of product lines
SELECT ROUND(AVG(rating),2) AS avg_rating, product_line
FROM sales
GROUP BY product_line

--SALES--
-- Number of sales made during each time of day per weekday
SELECT COUNT(total), day_of_week, time_of_day
FROM sales
GROUP BY day_of_week, time_of_day
ORDER BY COUNT(total) DESC

-- Which Customer brings the most revenue
SELECT customer_type, ROUND(SUM(total),2) AS total_revenue
FROM sales
GROUP BY customer_type
ORDER BY total_revenue DESC
-- Which city has the largest VAT (tax percent)
SELECT city, ROUND(AVG(tax_pct),1) AS avg_tax
FROM sales
GROUP BY city
ORDER BY avg_tax DESC
-- Which Customer pays the most in VAT
SELECT customer_type, ROUND(AVG(tax_pct),1) AS avg_tax
FROM sales
GROUP BY customer_type
ORDER BY avg_tax DESC

--CUSTOMER
-- How many unique customer types?
SELECT COUNT(DISTINCT(customer_type))
FROM sales
-- How many unique payment types?
SELECT COUNT(DISTINCT(payment))
FROM sales
-- What is the most common type of customers?
SELECT COUNT(customer_type)
FROM sales
GROUP BY customer_type
ORDER BY COUNT(customer_type) DESC
-- Which customer type purchases the most
SELECT COUNt(*), customer_type
FROM sales
GROUP BY customer_type
ORDER BY customer_type
-- WHat is the gender of most of the customers
SELECT customer_type,  gender,COUNT(gender)
FROM sales
GROUP BY gender, customer_type
ORDER BY COUNT(gender) DESC
-- Gender Distribution by Branch
SELECT branch, gender,COUNT(gender)
FROM sales
GROUP BY branch, gender
ORDER BY COUNT(gender) DESC
--What time of day do customers give most ratings per branch
SELECT time_of_day, AVG(rating)
FROM sales
WHERE branch = 'A'
GROUP BY time_of_day
ORDER BY COUNT(rating) DESC
--What time of day do customers give most ratings 
SELECT time_of_day, COUNT(rating)
FROM sales
GROUP BY branch, time_of_day
ORDER BY COUNT(rating) DESC
-- Which day of week has best average ratings
SELECT day_of_week, ROUND(AVG(rating),1) AS avg_rating
FROM sales
GROUP BY day_of_week
ORDER BY avg_rating DESC
-- Which day of the week has the best avg ratings per branch
SELECT day_of_week, ROUND(AVG(rating),1) AS avg_rating, branch
FROM sales
GROUP BY day_of_week, branch
ORDER BY day_of_week, branch

SELECT 
	day_of_week,
	COUNT(day_of_week) total_sales
FROM sales
WHERE branch = 'C'
GROUP BY day_of_week
ORDER BY total_sales DESC;
